using Microsoft.EntityFrameworkCore;

namespace EmptyProject01
{

    public class InventoryManagement
    {
        public int ID { get; set; }
        public string TRANSACTIONDATE { get; set; }
        public string DIVISION { get; set; }
        public string STORENAME { get; set; }
        public string NAME { get; set; }
        public int QUANTITY { get; set; }
        public int STANDARD { get; set; }
        public string UNIT { get; set; }
        public int UNITPRICE { get; set; }
        public int SUM { get; set; }
    }
    public class PersonContext : DbContext
    {
        public DbSet<InventoryManagement> InventoryManagement { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseOracle("User Id=c##scott;Password=c##tiger;Data Source=127.0.0.1/XE;");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<InventoryManagement>()   //Primary key 지정
                .HasKey(p => p.ID);

            modelBuilder.Entity<InventoryManagement>()   //Varchar2(30) 30크기를 정할 때
                .Property(p => p.TRANSACTIONDATE)
                .HasMaxLength(30);

            modelBuilder.Entity<InventoryManagement>()
                .Property(p => p.DIVISION)
                .HasMaxLength(30);

            modelBuilder.Entity<InventoryManagement>()
              .Property(p => p.STORENAME)
              .HasMaxLength(30);

            modelBuilder.Entity<InventoryManagement>()
             .Property(p => p.NAME)
             .HasMaxLength(30);

            modelBuilder.Entity<InventoryManagement>()  
              .HasKey(p => p.QUANTITY);

            modelBuilder.Entity<InventoryManagement>()  
              .HasKey(p => p.STANDARD);

            modelBuilder.Entity<InventoryManagement>()
             .Property(p => p.UNIT)
             .HasMaxLength(30);

            modelBuilder.Entity<InventoryManagement>()  
           .HasKey(p => p.UNITPRICE);    

            modelBuilder.Entity<InventoryManagement>() 
           .HasKey(p => p.SUM);

        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            using (var context = new PersonContext())
            {
                // 데이터베이스와 테이블 생성
                context.Database.EnsureDeleted(); //기존의 테이블이 있을경우 삭제를 단행하는데 DB자체를 지우는 명령어라 타 테이블도 삭제됩니다.
                //조심해서 사용해야할 필요가 있습니다.
                context.Database.EnsureCreated();   //테이블 또는 DB를 만드는 명령어인데 기존에 존재하는 파일이 있다면 아무 작업도 하지 않습니다.
                Console.WriteLine("테이블 생성 완료.");
            }
        }
    }
}
